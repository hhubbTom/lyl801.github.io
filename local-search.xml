<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>BN、LN</title>
    <link href="/hhubbTom/hhubbTom.github.io/2025/04/01/BN%E3%80%81LN/"/>
    <url>/hhubbTom/hhubbTom.github.io/2025/04/01/BN%E3%80%81LN/</url>
    
    <content type="html"><![CDATA[<h1 id="BN、LN"><a href="#BN、LN" class="headerlink" title="BN、LN"></a>BN、LN</h1><p><strong>一、什么是Normalization？</strong></p><p>Normalization：规范化或标准化，就是把输入数据X，在输送给神经元之前先对其进行平移和伸缩变换，将X的分布规范化成在<strong>固定区间范围</strong>的标准分布。</p><p><img src="https://github.com/Wzy1007007/ML-DL/blob/main/ML%E3%80%81DL/BN%E3%80%81LN%E5%9B%BE%E7%89%87/image.png" alt="image.png"></p><p><strong>二、深度学习中为什么要用Normalization？</strong></p><p>把数据拉回标准<strong>正态分布</strong>，因为神经网络的Block大部分都是矩阵运算，一个向量经过矩阵运算后值会越来越大，产生各种各样的分布，梯度会不稳定。**为了网络的稳定性，加快网络的收敛，防止过拟合，且便于比较，**我们需要及时把值拉回正态分布。</p><p>Normalization根据标准化操作的维度不同可以分为batch Normalization和Layer Normalization。BatchNorm就是通过对batch size这个维度归一化来让分布稳定下来。LayerNorm则是通过对Hidden size这个维度归一化来让某层的分布稳定。</p><p><strong>三、Batch Normalization 和 Layer Normalization的定义</strong></p><p>BN（纵向规范化）：</p><p><img src="https://github.com/Wzy1007007/ML-DL/blob/main/ML%E3%80%81DL/BN%E3%80%81LN%E5%9B%BE%E7%89%87/image%201.png" alt="image.png"></p><p>LN（横向规范化）：</p><p><img src="https://github.com/Wzy1007007/ML-DL/blob/main/ML%E3%80%81DL/BN%E3%80%81LN%E5%9B%BE%E7%89%87/image%202.png" alt="image.png"></p><p><strong>四、Batch Normalization 和 Layer Normalization的区别</strong></p><p>BatchNorm是对一个batch-size样本内的每个特征做归一化，**抹杀了同一样本内不同特征之间的大小关系，但是保留了不同样本间的大小关系；**LayerNorm是对每个样本的所有特征一起做归一化，<strong>抹杀了不同样本间的大小关系，但是保留了一个样本内不同特征之间的大小关系</strong>。</p><p><strong>（理解：<strong>BN对batch</strong>不同数据的同一特征</strong>进行标准化，变换之后，纵向来看，不同样本的同一特征仍然保留了之前的大小关系，但是横向对比样本内部的各个特征之间的大小关系不一定和变换之前一样了，因此抹杀或破坏了不同特征之间的大小关系，保留了不同样本之间的大小关系；LN对<strong>单一样本的所有特征</strong>进行标准化，样本内的特征处理后原来数值大的还是相对较大，原来数值小的还是相对较小，不同特征之间的大小关系还是保留了下来，但是不同样本在各自标准化处理之后，两个样本对应位置的特征之间的大小关系将不再确定，可能和处理之前就不一样了，所以破坏了不同样本间的大小关系**）**</p><p><strong>五、Batch Normalization 和 Layer Normalization的使用场景</strong></p><p>在BN和LN都能使用的场景中，BN的效果一般优于LN，原因是基于不同数据，同一特征得到的归一化特征<strong>更不容易损失信息</strong>。但是有些场景是不能使用BN的，例如batch size较小或者序列问题中使用LN。</p><p><strong>RNN 或Transformer为什么用Layer Normalization？</strong></p><p><strong>首先</strong>RNN或Transformer解决的是序列问题，一个存在的问题是不同样本的序列长度不一致，而Batch Normalization需要对不同样本的同一位置特征进行标准化处理，所以无法应用；当然，输入的序列都要做padding补齐操作，但是补齐的位置填充的都是0，这些位置都是无意义的，此时的标准化也就没有意义了。</p><p><strong>其次</strong>上面说到，BN抹杀了不同特征之间的大小关系；LN是保留了一个样本内不同特征之间的大小关系，这对NLP任务是至关重要的。对于NLP或者序列任务来说，一条样本的不同特征，其实就是时序上的变化，这正是需要学习的东西，自然不能做归一化抹杀，所以要用LN。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/hhubbTom/hhubbTom.github.io/2025/03/22/hello-world/"/>
    <url>/hhubbTom/hhubbTom.github.io/2025/03/22/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
